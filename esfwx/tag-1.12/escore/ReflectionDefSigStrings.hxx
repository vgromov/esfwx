// method signature strings generation
//
#define REFL_METHOD_ENTRIES_BEGIN
#define REFL_METHOD_ENTRY0( RetVal )																													.add( GEN_SIG0(RetVal, Call), wxT(#RetVal) wxT(" Object.Method()") )
#define REFL_METHOD_ENTRY1( RetVal, Param1 )																									.add( GEN_SIG1(RetVal, Call, Param1), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(")") )
#define REFL_METHOD_ENTRY2( RetVal, Param1, Param2 )																					.add( GEN_SIG2(RetVal, Call, Param1, Param2), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(")") )
#define REFL_METHOD_ENTRY3( RetVal, Param1, Param2, Param3 )																	.add( GEN_SIG3(RetVal, Call, Param1, Param2, Param3), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(")") )
#define REFL_METHOD_ENTRY4( RetVal, Param1, Param2, Param3, Param4 )													.add( GEN_SIG4(RetVal, Call, Param1, Param2, Param3, Param4), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(", ") wxT(#Param4) wxT(")") )
#define REFL_METHOD_ENTRY5( RetVal, Param1, Param2, Param3, Param4, Param5 )									.add( GEN_SIG5(RetVal, Call, Param1, Param2, Param3, Param4, Param5), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(", ") wxT(#Param4) wxT(", ") wxT(#Param5) wxT(")") )
#define REFL_METHOD_ENTRY6( RetVal, Param1, Param2, Param3, Param4, Param5, Param6 )					.add( GEN_SIG6(RetVal, Call, Param1, Param2, Param3, Param4, Param5, Param6), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(", ") wxT(#Param4) wxT(", ") wxT(#Param5) wxT(", ") wxT(#Param6) wxT(")") )
#define REFL_METHOD_ENTRY_NR0																																	REFL_METHOD_ENTRY0(void)
#define REFL_METHOD_ENTRY_NR1( Param1 )																												REFL_METHOD_ENTRY1(void, Param1 )
#define REFL_METHOD_ENTRY_NR2( Param1, Param2 )																								REFL_METHOD_ENTRY2(void, Param1, Param2 )
#define REFL_METHOD_ENTRY_NR3( Param1, Param2, Param3 )																				REFL_METHOD_ENTRY3(void, Param1, Param2, Param3 )
#define REFL_METHOD_ENTRY_NR4( Param1, Param2, Param3, Param4 )																REFL_METHOD_ENTRY4(void, Param1, Param2, Param3, Param4 )
#define REFL_METHOD_ENTRY_NR5( Param1, Param2, Param3, Param4, Param5 )												REFL_METHOD_ENTRY5(void, Param1, Param2, Param3, Param4, Param5 )
#define REFL_METHOD_ENTRY_NR6( Param1, Param2, Param3, Param4, Param5, Param6 )								REFL_METHOD_ENTRY6(void, Param1, Param2, Param3, Param4, Param5, Param6 )
#define REFL_CONST_METHOD_ENTRY0( RetVal )																										.add( GEN_SIG0(RetVal, CallConst), wxT(#RetVal) wxT(" Object.Method() const") )
#define REFL_CONST_METHOD_ENTRY1( RetVal, Param1 )																						.add( GEN_SIG1(RetVal, CallConst, Param1), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(") const") )
#define REFL_CONST_METHOD_ENTRY2( RetVal, Param1, Param2 )																		.add( GEN_SIG2(RetVal, CallConst, Param1, Param2), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(") const") )
#define REFL_CONST_METHOD_ENTRY3( RetVal, Param1, Param2, Param3 )														.add( GEN_SIG3(RetVal, CallConst, Param1, Param2, Param3), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(") const") )
#define REFL_CONST_METHOD_ENTRY4( RetVal, Param1, Param2, Param3, Param4 )										.add( GEN_SIG4(RetVal, CallConst, Param1, Param2, Param3, Param4), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(", ") wxT(#Param4) wxT(") const") )
#define REFL_CONST_METHOD_ENTRY5( RetVal, Param1, Param2, Param3, Param4, Param5 )						.add( GEN_SIG5(RetVal, CallConst, Param1, Param2, Param3, Param4, Param5), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(", ") wxT(#Param4) wxT(", ") wxT(#Param5) wxT(") const") )
#define REFL_CONST_METHOD_ENTRY6( RetVal, Param1, Param2, Param3, Param4, Param5, Param6 )		.add( GEN_SIG6(RetVal, CallConst, Param1, Param2, Param3, Param4, Param5, Param6), wxT(#RetVal) wxT(" Object.Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(", ") wxT(#Param4) wxT(", ") wxT(#Param5) wxT(", ") wxT(#Param6) wxT(") const") )
#define REFL_CONST_METHOD_ENTRY_NR0																														REFL_CONST_METHOD_ENTRY0(void)
#define REFL_CONST_METHOD_ENTRY_NR1( Param1 )																									REFL_CONST_METHOD_ENTRY1(void, Param1 )
#define REFL_CONST_METHOD_ENTRY_NR2( Param1, Param2 )																					REFL_CONST_METHOD_ENTRY2(void, Param1, Param2 )
#define REFL_CONST_METHOD_ENTRY_NR3( Param1, Param2, Param3 )																	REFL_CONST_METHOD_ENTRY3(void, Param1, Param2, Param3 )
#define REFL_CONST_METHOD_ENTRY_NR4( Param1, Param2, Param3, Param4 )													REFL_CONST_METHOD_ENTRY4(void, Param1, Param2, Param3, Param4 )
#define REFL_CONST_METHOD_ENTRY_NR5( Param1, Param2, Param3, Param4, Param5 )									REFL_CONST_METHOD_ENTRY5(void, Param1, Param2, Param3, Param4, Param5 )
#define REFL_CONST_METHOD_ENTRY_NR6( Param1, Param2, Param3, Param4, Param5, Param6 )					REFL_CONST_METHOD_ENTRY6(void, Param1, Param2, Param3, Param4, Param5, Param6 )
#define REFL_METHOD_ENTRIES_END
#define REFL_CLASS_METHOD_ENTRIES_BEGIN
#define REFL_CLASS_METHOD_ENTRY0( RetVal )																										.add( GEN_SIG0(RetVal, ClassCall), wxT(#RetVal) wxT(" Object::Method()") )
#define REFL_CLASS_METHOD_ENTRY1( RetVal, Param1 )																						.add( GEN_SIG1(RetVal, ClassCall, Param1), wxT(#RetVal) wxT(" Object::Method(") wxT(#Param1) wxT(")") )
#define REFL_CLASS_METHOD_ENTRY2( RetVal, Param1, Param2 )																		.add( GEN_SIG2(RetVal, ClassCall, Param1, Param2), wxT(#RetVal) wxT(" Object::Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(")") )
#define REFL_CLASS_METHOD_ENTRY3( RetVal, Param1, Param2, Param3 )														.add( GEN_SIG3(RetVal, ClassCall, Param1, Param2, Param3), wxT(#RetVal) wxT(" Object::Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(")") )
#define REFL_CLASS_METHOD_ENTRY4( RetVal, Param1, Param2, Param3, Param4 )										.add( GEN_SIG4(RetVal, ClassCall, Param1, Param2, Param3, Param4), wxT(#RetVal) wxT(" Object::Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(", ") wxT(#Param4) wxT(")") )
#define REFL_CLASS_METHOD_ENTRY5( RetVal, Param1, Param2, Param3, Param4, Param5 )						.add( GEN_SIG5(RetVal, ClassCall, Param1, Param2, Param3, Param4, Param5), wxT(#RetVal) wxT(" Object::Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(", ") wxT(#Param4) wxT(", ") wxT(#Param5) wxT(")") )
#define REFL_CLASS_METHOD_ENTRY6( RetVal, Param1, Param2, Param3, Param4, Param5, Param6 )		.add( GEN_SIG6(RetVal, ClassCall, Param1, Param2, Param3, Param4, Param5, Param6), wxT(#RetVal) wxT(" Object::Method(") wxT(#Param1) wxT(", ") wxT(#Param2) wxT(", ") wxT(#Param3) wxT(", ") wxT(#Param4) wxT(", ") wxT(#Param5) wxT(", ") wxT(#Param6) wxT(")") )
#define REFL_CLASS_METHOD_ENTRY_NR0																														REFL_CLASS_METHOD_ENTRY0(void)
#define REFL_CLASS_METHOD_ENTRY_NR1( Param1 )																									REFL_CLASS_METHOD_ENTRY1(void, Param1 )
#define REFL_CLASS_METHOD_ENTRY_NR2( Param1, Param2 )																					REFL_CLASS_METHOD_ENTRY2(void, Param1, Param2 )
#define REFL_CLASS_METHOD_ENTRY_NR3( Param1, Param2, Param3 )																	REFL_CLASS_METHOD_ENTRY3(void, Param1, Param2, Param3 )
#define REFL_CLASS_METHOD_ENTRY_NR4( Param1, Param2, Param3, Param4 )													REFL_CLASS_METHOD_ENTRY4(void, Param1, Param2, Param3, Param4 )
#define REFL_CLASS_METHOD_ENTRY_NR5( Param1, Param2, Param3, Param4, Param5 )									REFL_CLASS_METHOD_ENTRY5(void, Param1, Param2, Param3, Param4, Param5 )
#define REFL_CLASS_METHOD_ENTRY_NR6( Param1, Param2, Param3, Param4, Param5, Param6 )					REFL_CLASS_METHOD_ENTRY6(void, Param1, Param2, Param3, Param4, Param5, Param6 )
#define REFL_CLASS_METHOD_ENTRIES_END																													;
#include <escore/Reflection.hxx>

