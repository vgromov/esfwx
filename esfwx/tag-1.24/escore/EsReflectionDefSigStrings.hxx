// method signature strings generation
//
#define REFL_METHOD_ENTRIES_BEGIN
#define REFL_METHOD_ENTRY0( RetVal )                                                          .add( GEN_SIG0(RetVal, Call), esT(#RetVal) esT(" Object.Method()") )
#define REFL_METHOD_ENTRY1( RetVal, Param1 )                                                  .add( GEN_SIG1(RetVal, Call, Param1), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(")") )
#define REFL_METHOD_ENTRY2( RetVal, Param1, Param2 )                                          .add( GEN_SIG2(RetVal, Call, Param1, Param2), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(")") )
#define REFL_METHOD_ENTRY3( RetVal, Param1, Param2, Param3 )                                  .add( GEN_SIG3(RetVal, Call, Param1, Param2, Param3), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(")") )
#define REFL_METHOD_ENTRY4( RetVal, Param1, Param2, Param3, Param4 )                          .add( GEN_SIG4(RetVal, Call, Param1, Param2, Param3, Param4), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(")") )
#define REFL_METHOD_ENTRY5( RetVal, Param1, Param2, Param3, Param4, Param5 )                  .add( GEN_SIG5(RetVal, Call, Param1, Param2, Param3, Param4, Param5), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(", ") esT(#Param5) esT(")") )
#define REFL_METHOD_ENTRY6( RetVal, Param1, Param2, Param3, Param4, Param5, Param6 )          .add( GEN_SIG6(RetVal, Call, Param1, Param2, Param3, Param4, Param5, Param6), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(", ") esT(#Param5) esT(", ") esT(#Param6) esT(")") )
#define REFL_METHOD_ENTRY7( RetVal, Param1, Param2, Param3, Param4, Param5, Param6, Param7 )  .add( GEN_SIG7(RetVal, Call, Param1, Param2, Param3, Param4, Param5, Param6, Param7), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(", ") esT(#Param5) esT(", ") esT(#Param6) esT(", ") esT(#Param7) esT(")") )
#define REFL_METHOD_ENTRY_NR0                                                                  REFL_METHOD_ENTRY0(void)
#define REFL_METHOD_ENTRY_NR1( Param1 )                                                        REFL_METHOD_ENTRY1(void, Param1 )
#define REFL_METHOD_ENTRY_NR2( Param1, Param2 )                                                REFL_METHOD_ENTRY2(void, Param1, Param2 )
#define REFL_METHOD_ENTRY_NR3( Param1, Param2, Param3 )                                        REFL_METHOD_ENTRY3(void, Param1, Param2, Param3 )
#define REFL_METHOD_ENTRY_NR4( Param1, Param2, Param3, Param4 )                                REFL_METHOD_ENTRY4(void, Param1, Param2, Param3, Param4 )
#define REFL_METHOD_ENTRY_NR5( Param1, Param2, Param3, Param4, Param5 )                        REFL_METHOD_ENTRY5(void, Param1, Param2, Param3, Param4, Param5 )
#define REFL_METHOD_ENTRY_NR6( Param1, Param2, Param3, Param4, Param5, Param6 )                REFL_METHOD_ENTRY6(void, Param1, Param2, Param3, Param4, Param5, Param6 )
#define REFL_METHOD_ENTRY_NR7( Param1, Param2, Param3, Param4, Param5, Param6, Param7 )        REFL_METHOD_ENTRY7(void, Param1, Param2, Param3, Param4, Param5, Param6, Param7 )
#define REFL_CONST_METHOD_ENTRY0( RetVal )                                                    .add( GEN_SIG0(RetVal, CallConst), esT(#RetVal) esT(" Object.Method() const") )
#define REFL_CONST_METHOD_ENTRY1( RetVal, Param1 )                                            .add( GEN_SIG1(RetVal, CallConst, Param1), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(") const") )
#define REFL_CONST_METHOD_ENTRY2( RetVal, Param1, Param2 )                                    .add( GEN_SIG2(RetVal, CallConst, Param1, Param2), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(") const") )
#define REFL_CONST_METHOD_ENTRY3( RetVal, Param1, Param2, Param3 )                            .add( GEN_SIG3(RetVal, CallConst, Param1, Param2, Param3), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(") const") )
#define REFL_CONST_METHOD_ENTRY4( RetVal, Param1, Param2, Param3, Param4 )                    .add( GEN_SIG4(RetVal, CallConst, Param1, Param2, Param3, Param4), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(") const") )
#define REFL_CONST_METHOD_ENTRY5( RetVal, Param1, Param2, Param3, Param4, Param5 )            .add( GEN_SIG5(RetVal, CallConst, Param1, Param2, Param3, Param4, Param5), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(", ") esT(#Param5) esT(") const") )
#define REFL_CONST_METHOD_ENTRY6( RetVal, Param1, Param2, Param3, Param4, Param5, Param6 )    .add( GEN_SIG6(RetVal, CallConst, Param1, Param2, Param3, Param4, Param5, Param6), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(", ") esT(#Param5) esT(", ") esT(#Param6) esT(") const") )
#define REFL_CONST_METHOD_ENTRY7( RetVal, Param1, Param2, Param3, Param4, Param5, Param6, Param7 ) .add( GEN_SIG7(RetVal, CallConst, Param1, Param2, Param3, Param4, Param5, Param6, Param7), esT(#RetVal) esT(" Object.Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(", ") esT(#Param5) esT(", ") esT(#Param6) esT(", ") esT(#Param7) esT(") const") )
#define REFL_CONST_METHOD_ENTRY_NR0                                                            REFL_CONST_METHOD_ENTRY0(void)
#define REFL_CONST_METHOD_ENTRY_NR1( Param1 )                                                  REFL_CONST_METHOD_ENTRY1(void, Param1 )
#define REFL_CONST_METHOD_ENTRY_NR2( Param1, Param2 )                                          REFL_CONST_METHOD_ENTRY2(void, Param1, Param2 )
#define REFL_CONST_METHOD_ENTRY_NR3( Param1, Param2, Param3 )                                  REFL_CONST_METHOD_ENTRY3(void, Param1, Param2, Param3 )
#define REFL_CONST_METHOD_ENTRY_NR4( Param1, Param2, Param3, Param4 )                          REFL_CONST_METHOD_ENTRY4(void, Param1, Param2, Param3, Param4 )
#define REFL_CONST_METHOD_ENTRY_NR5( Param1, Param2, Param3, Param4, Param5 )                  REFL_CONST_METHOD_ENTRY5(void, Param1, Param2, Param3, Param4, Param5 )
#define REFL_CONST_METHOD_ENTRY_NR6( Param1, Param2, Param3, Param4, Param5, Param6 )          REFL_CONST_METHOD_ENTRY6(void, Param1, Param2, Param3, Param4, Param5, Param6 )
#define REFL_CONST_METHOD_ENTRY_NR7( Param1, Param2, Param3, Param4, Param5, Param6, Param7 )  REFL_CONST_METHOD_ENTRY7(void, Param1, Param2, Param3, Param4, Param5, Param6, Param7 )
#define REFL_METHOD_ENTRIES_END
#define REFL_CLASS_METHOD_ENTRIES_BEGIN
#define REFL_CLASS_METHOD_ENTRY0( RetVal )                                                    .add( GEN_SIG0(RetVal, ClassCall), esT(#RetVal) esT(" Object::Method()") )
#define REFL_CLASS_METHOD_ENTRY1( RetVal, Param1 )                                            .add( GEN_SIG1(RetVal, ClassCall, Param1), esT(#RetVal) esT(" Object::Method(") esT(#Param1) esT(")") )
#define REFL_CLASS_METHOD_ENTRY2( RetVal, Param1, Param2 )                                    .add( GEN_SIG2(RetVal, ClassCall, Param1, Param2), esT(#RetVal) esT(" Object::Method(") esT(#Param1) esT(", ") esT(#Param2) esT(")") )
#define REFL_CLASS_METHOD_ENTRY3( RetVal, Param1, Param2, Param3 )                            .add( GEN_SIG3(RetVal, ClassCall, Param1, Param2, Param3), esT(#RetVal) esT(" Object::Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(")") )
#define REFL_CLASS_METHOD_ENTRY4( RetVal, Param1, Param2, Param3, Param4 )                    .add( GEN_SIG4(RetVal, ClassCall, Param1, Param2, Param3, Param4), esT(#RetVal) esT(" Object::Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(")") )
#define REFL_CLASS_METHOD_ENTRY5( RetVal, Param1, Param2, Param3, Param4, Param5 )            .add( GEN_SIG5(RetVal, ClassCall, Param1, Param2, Param3, Param4, Param5), esT(#RetVal) esT(" Object::Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(", ") esT(#Param5) esT(")") )
#define REFL_CLASS_METHOD_ENTRY6( RetVal, Param1, Param2, Param3, Param4, Param5, Param6 )    .add( GEN_SIG6(RetVal, ClassCall, Param1, Param2, Param3, Param4, Param5, Param6), esT(#RetVal) esT(" Object::Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(", ") esT(#Param5) esT(", ") esT(#Param6) esT(")") )
#define REFL_CLASS_METHOD_ENTRY7( RetVal, Param1, Param2, Param3, Param4, Param5, Param6, Param7 ) .add( GEN_SIG7(RetVal, ClassCall, Param1, Param2, Param3, Param4, Param5, Param6, Param7), esT(#RetVal) esT(" Object::Method(") esT(#Param1) esT(", ") esT(#Param2) esT(", ") esT(#Param3) esT(", ") esT(#Param4) esT(", ") esT(#Param5) esT(", ") esT(#Param6) esT(", ") esT(#Param7) esT(")") )
#define REFL_CLASS_METHOD_ENTRY_NR0                                                            REFL_CLASS_METHOD_ENTRY0(void)
#define REFL_CLASS_METHOD_ENTRY_NR1( Param1 )                                                  REFL_CLASS_METHOD_ENTRY1(void, Param1 )
#define REFL_CLASS_METHOD_ENTRY_NR2( Param1, Param2 )                                          REFL_CLASS_METHOD_ENTRY2(void, Param1, Param2 )
#define REFL_CLASS_METHOD_ENTRY_NR3( Param1, Param2, Param3 )                                  REFL_CLASS_METHOD_ENTRY3(void, Param1, Param2, Param3 )
#define REFL_CLASS_METHOD_ENTRY_NR4( Param1, Param2, Param3, Param4 )                          REFL_CLASS_METHOD_ENTRY4(void, Param1, Param2, Param3, Param4 )
#define REFL_CLASS_METHOD_ENTRY_NR5( Param1, Param2, Param3, Param4, Param5 )                  REFL_CLASS_METHOD_ENTRY5(void, Param1, Param2, Param3, Param4, Param5 )
#define REFL_CLASS_METHOD_ENTRY_NR6( Param1, Param2, Param3, Param4, Param5, Param6 )          REFL_CLASS_METHOD_ENTRY6(void, Param1, Param2, Param3, Param4, Param5, Param6 )
#define REFL_CLASS_METHOD_ENTRY_NR7( Param1, Param2, Param3, Param4, Param5, Param6, Param7 )  REFL_CLASS_METHOD_ENTRY7(void, Param1, Param2, Param3, Param4, Param5, Param6, Param7 )
#define REFL_CLASS_METHOD_ENTRIES_END                                                          ;
#include <escore/EsReflection.hxx>

